import { existsSync, mkdirSync } from "node:fs";
import { tmpdir } from "node:os";
import node_path from "node:path";
import { getBasicEnvValue } from "./env/basic.mjs";
import { MIDSCENE_RUN_DIR } from "./env/types.mjs";
import { ifInNode } from "./utils.mjs";
const defaultRunDirName = 'midscene_run';
const getMidsceneRunDir = ()=>{
    if (!ifInNode) return '';
    return getBasicEnvValue(MIDSCENE_RUN_DIR) || defaultRunDirName;
};
const getMidsceneRunBaseDir = ()=>{
    if (!ifInNode) return '';
    let basePath = node_path.resolve(process.cwd(), getMidsceneRunDir());
    if (!existsSync(basePath)) try {
        mkdirSync(basePath, {
            recursive: true
        });
    } catch (error) {
        basePath = node_path.join(tmpdir(), defaultRunDirName);
        mkdirSync(basePath, {
            recursive: true
        });
    }
    return basePath;
};
const getMidsceneRunSubDir = (subdir)=>{
    if (!ifInNode) return '';
    const basePath = getMidsceneRunBaseDir();
    const logPath = node_path.join(basePath, subdir);
    if (!existsSync(logPath)) mkdirSync(logPath, {
        recursive: true
    });
    return logPath;
};
const ERROR_CODE_NOT_IMPLEMENTED_AS_DESIGNED = 'NOT_IMPLEMENTED_AS_DESIGNED';
export { ERROR_CODE_NOT_IMPLEMENTED_AS_DESIGNED, defaultRunDirName, getMidsceneRunBaseDir, getMidsceneRunDir, getMidsceneRunSubDir };
