"use strict";
var __webpack_require__ = {};
(()=>{
    __webpack_require__.n = (module)=>{
        var getter = module && module.__esModule ? ()=>module['default'] : ()=>module;
        __webpack_require__.d(getter, {
            a: getter
        });
        return getter;
    };
})();
(()=>{
    __webpack_require__.d = (exports1, definition)=>{
        for(var key in definition)if (__webpack_require__.o(definition, key) && !__webpack_require__.o(exports1, key)) Object.defineProperty(exports1, key, {
            enumerable: true,
            get: definition[key]
        });
    };
})();
(()=>{
    __webpack_require__.o = (obj, prop)=>Object.prototype.hasOwnProperty.call(obj, prop);
})();
(()=>{
    __webpack_require__.r = (exports1)=>{
        if ('undefined' != typeof Symbol && Symbol.toStringTag) Object.defineProperty(exports1, Symbol.toStringTag, {
            value: 'Module'
        });
        Object.defineProperty(exports1, '__esModule', {
            value: true
        });
    };
})();
var __webpack_exports__ = {};
__webpack_require__.r(__webpack_exports__);
__webpack_require__.d(__webpack_exports__, {
    defaultRunDirName: ()=>defaultRunDirName,
    ERROR_CODE_NOT_IMPLEMENTED_AS_DESIGNED: ()=>ERROR_CODE_NOT_IMPLEMENTED_AS_DESIGNED,
    getMidsceneRunDir: ()=>getMidsceneRunDir,
    getMidsceneRunSubDir: ()=>getMidsceneRunSubDir,
    getMidsceneRunBaseDir: ()=>getMidsceneRunBaseDir
});
const external_node_fs_namespaceObject = require("node:fs");
const external_node_os_namespaceObject = require("node:os");
const external_node_path_namespaceObject = require("node:path");
var external_node_path_default = /*#__PURE__*/ __webpack_require__.n(external_node_path_namespaceObject);
const basic_js_namespaceObject = require("./env/basic.js");
const types_js_namespaceObject = require("./env/types.js");
const external_utils_js_namespaceObject = require("./utils.js");
const defaultRunDirName = 'midscene_run';
const getMidsceneRunDir = ()=>{
    if (!external_utils_js_namespaceObject.ifInNode) return '';
    return (0, basic_js_namespaceObject.getBasicEnvValue)(types_js_namespaceObject.MIDSCENE_RUN_DIR) || defaultRunDirName;
};
const getMidsceneRunBaseDir = ()=>{
    if (!external_utils_js_namespaceObject.ifInNode) return '';
    let basePath = external_node_path_default().resolve(process.cwd(), getMidsceneRunDir());
    if (!(0, external_node_fs_namespaceObject.existsSync)(basePath)) try {
        (0, external_node_fs_namespaceObject.mkdirSync)(basePath, {
            recursive: true
        });
    } catch (error) {
        basePath = external_node_path_default().join((0, external_node_os_namespaceObject.tmpdir)(), defaultRunDirName);
        (0, external_node_fs_namespaceObject.mkdirSync)(basePath, {
            recursive: true
        });
    }
    return basePath;
};
const getMidsceneRunSubDir = (subdir)=>{
    if (!external_utils_js_namespaceObject.ifInNode) return '';
    const basePath = getMidsceneRunBaseDir();
    const logPath = external_node_path_default().join(basePath, subdir);
    if (!(0, external_node_fs_namespaceObject.existsSync)(logPath)) (0, external_node_fs_namespaceObject.mkdirSync)(logPath, {
        recursive: true
    });
    return logPath;
};
const ERROR_CODE_NOT_IMPLEMENTED_AS_DESIGNED = 'NOT_IMPLEMENTED_AS_DESIGNED';
exports.ERROR_CODE_NOT_IMPLEMENTED_AS_DESIGNED = __webpack_exports__.ERROR_CODE_NOT_IMPLEMENTED_AS_DESIGNED;
exports.defaultRunDirName = __webpack_exports__.defaultRunDirName;
exports.getMidsceneRunBaseDir = __webpack_exports__.getMidsceneRunBaseDir;
exports.getMidsceneRunDir = __webpack_exports__.getMidsceneRunDir;
exports.getMidsceneRunSubDir = __webpack_exports__.getMidsceneRunSubDir;
for(var __webpack_i__ in __webpack_exports__)if (-1 === [
    "ERROR_CODE_NOT_IMPLEMENTED_AS_DESIGNED",
    "defaultRunDirName",
    "getMidsceneRunBaseDir",
    "getMidsceneRunDir",
    "getMidsceneRunSubDir"
].indexOf(__webpack_i__)) exports[__webpack_i__] = __webpack_exports__[__webpack_i__];
Object.defineProperty(exports, '__esModule', {
    value: true
});
