import type { DeviceAction } from '../../types';
import { PromptTemplate } from '@langchain/core/prompts';
import type { vlLocateMode } from '@midscene/shared/env';
import type { ResponseFormatJSONSchema } from 'openai/resources/index';
export declare const descriptionForAction: (action: DeviceAction<any>, locatorSchemaTypeDescription: string) => string;
export declare function systemPromptToTaskPlanning({ actionSpace, vlMode, }: {
    actionSpace: DeviceAction<any>[];
    vlMode: ReturnType<typeof vlLocateMode>;
}): Promise<string>;
export declare const planSchema: ResponseFormatJSONSchema;
export declare const generateTaskBackgroundContext: (userInstruction: string, log?: string, userActionContext?: string) => string;
export declare const automationUserPrompt: (vlMode: ReturnType<typeof vlLocateMode>) => PromptTemplate<{
    pageDescription: any;
    taskBackgroundContext: any;
}, any>;
