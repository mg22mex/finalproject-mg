function typeStr(task) {
    return task.subType && 'Plan' !== task.subType ? `${task.type} / ${task.subType || ''}` : task.type;
}
function locateParamStr(locate) {
    if (!locate) return '';
    if ('string' == typeof locate) return locate;
    if ('string' == typeof locate.prompt) return locate.prompt;
    if ('object' == typeof locate.prompt && locate.prompt.prompt) return locate.prompt.prompt;
    return '';
}
function scrollParamStr(scrollParam) {
    if (!scrollParam) return '';
    return `${scrollParam.direction || 'down'}, ${scrollParam.scrollType || 'once'}, ${scrollParam.distance || 'distance-not-set'}`;
}
function pullParamStr(pullParam) {
    if (!pullParam) return '';
    const parts = [];
    parts.push(`direction: ${pullParam.direction || 'down'}`);
    if (pullParam.distance) parts.push(`distance: ${pullParam.distance}`);
    if (pullParam.duration) parts.push(`duration: ${pullParam.duration}ms`);
    return parts.join(', ');
}
function taskTitleStr(type, prompt) {
    if (prompt) return `${type} - ${prompt}`;
    return type;
}
function paramStr(task) {
    let value;
    if ('Planning' === task.type) {
        var _task_param;
        value = null == task ? void 0 : null == (_task_param = task.param) ? void 0 : _task_param.userInstruction;
    }
    if ('Insight' === task.type) {
        var _task_param1, _task_param2, _task_param3, _task_param4;
        value = (null == task ? void 0 : null == (_task_param1 = task.param) ? void 0 : _task_param1.prompt) || (null == task ? void 0 : null == (_task_param2 = task.param) ? void 0 : _task_param2.id) || (null == task ? void 0 : null == (_task_param3 = task.param) ? void 0 : _task_param3.dataDemand) || (null == task ? void 0 : null == (_task_param4 = task.param) ? void 0 : _task_param4.assertion);
    }
    if ('Action' === task.type) {
        var _task_param5, _task_param6, _task_param7, _task_param8;
        const locate = null == task ? void 0 : task.locate;
        const locateStr = locate ? locateParamStr(locate) : '';
        value = task.thought || '';
        if ('number' == typeof (null == task ? void 0 : null == (_task_param5 = task.param) ? void 0 : _task_param5.timeMs)) {
            var _task_param9;
            value = `${null == task ? void 0 : null == (_task_param9 = task.param) ? void 0 : _task_param9.timeMs}ms`;
        } else if ('string' == typeof (null == task ? void 0 : null == (_task_param6 = task.param) ? void 0 : _task_param6.scrollType)) value = scrollParamStr(null == task ? void 0 : task.param);
        else if ('string' == typeof (null == task ? void 0 : null == (_task_param7 = task.param) ? void 0 : _task_param7.direction) && (null == task ? void 0 : task.subType) === 'AndroidPull') value = pullParamStr(null == task ? void 0 : task.param);
        else if (void 0 !== (null == task ? void 0 : null == (_task_param8 = task.param) ? void 0 : _task_param8.value)) {
            var _task_param10;
            value = null == task ? void 0 : null == (_task_param10 = task.param) ? void 0 : _task_param10.value;
        }
        if (locateStr) value = value ? `${locateStr} - ${value}` : locateStr;
    }
    if (void 0 === value) return '';
    return 'string' == typeof value ? value : JSON.stringify(value, void 0, 2);
}
export { locateParamStr, paramStr, pullParamStr, scrollParamStr, taskTitleStr, typeStr };

//# sourceMappingURL=ui-utils.mjs.map