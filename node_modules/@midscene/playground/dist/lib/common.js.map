{"version":3,"file":"common.js","sources":["webpack://@midscene/playground/webpack/runtime/define_property_getters","webpack://@midscene/playground/webpack/runtime/has_own_property","webpack://@midscene/playground/webpack/runtime/make_namespace_object","webpack://@midscene/playground/./src/common.ts"],"sourcesContent":["__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n        if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n            Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n        }\n    }\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import type { DeviceAction } from '@midscene/core';\nimport { findAllMidsceneLocatorField } from '@midscene/core/ai-model';\nimport type {\n  ExecutionOptions,\n  FormValue,\n  PlaygroundAgent,\n  ValidationResult,\n} from './types';\n\n// APIs that should not generate replay scripts\nexport const dataExtractionAPIs = [\n  'aiQuery',\n  'aiBoolean',\n  'aiNumber',\n  'aiString',\n  'aiAsk',\n];\n\nexport const validationAPIs = ['aiAssert', 'aiWaitFor'];\n\nexport const noReplayAPIs = [...dataExtractionAPIs, ...validationAPIs];\n\nexport const formatErrorMessage = (e: any): string => {\n  const errorMessage = e?.message || '';\n  if (errorMessage.includes('of different extension')) {\n    return 'Conflicting extension detected. Please disable the suspicious plugins and refresh the page. Guide: https://midscenejs.com/quick-experience.html#faq';\n  }\n  // Always return the actual error message, including NOT_IMPLEMENTED_AS_DESIGNED errors\n  return errorMessage || 'Unknown error';\n};\n\n// Parse structured parameters for callActionInActionSpace\nasync function parseStructuredParams(\n  action: DeviceAction<unknown>,\n  params: Record<string, unknown>,\n  options: ExecutionOptions = {},\n): Promise<unknown[]> {\n  if (!action?.paramSchema || !('shape' in action.paramSchema)) {\n    return [params.prompt || '', options];\n  }\n\n  const schema = action.paramSchema;\n  const keys =\n    schema && 'shape' in schema\n      ? Object.keys((schema as { shape: Record<string, unknown> }).shape)\n      : [];\n\n  const paramObj: Record<string, unknown> = { ...options };\n\n  keys.forEach((key) => {\n    if (\n      params[key] !== undefined &&\n      params[key] !== null &&\n      params[key] !== ''\n    ) {\n      paramObj[key] = params[key];\n    }\n  });\n\n  return [paramObj];\n}\n\nexport function validateStructuredParams(\n  value: FormValue,\n  action: DeviceAction<unknown> | undefined,\n): ValidationResult {\n  if (!value.params) {\n    return { valid: false, errorMessage: 'Parameters are required' };\n  }\n\n  if (!action?.paramSchema) {\n    return { valid: true };\n  }\n\n  try {\n    const paramsForValidation = { ...value.params };\n\n    const schema = action.paramSchema;\n    if (schema) {\n      const locatorFieldKeys = findAllMidsceneLocatorField(schema);\n      locatorFieldKeys.forEach((key) => {\n        if (typeof paramsForValidation[key] === 'string') {\n          paramsForValidation[key] = {\n            midscene_location_field_flag: true,\n            prompt: paramsForValidation[key],\n            center: [0, 0],\n            rect: { left: 0, top: 0, width: 0, height: 0 },\n          };\n        }\n      });\n    }\n\n    action.paramSchema?.parse(paramsForValidation);\n    return { valid: true };\n  } catch (error: unknown) {\n    const zodError = error as {\n      errors?: Array<{ path: string[]; message: string }>;\n    };\n    if (zodError.errors && zodError.errors.length > 0) {\n      const errorMessages = zodError.errors\n        .filter((err) => {\n          const path = err.path.join('.');\n          return (\n            !path.includes('center') &&\n            !path.includes('rect') &&\n            !path.includes('midscene_location_field_flag')\n          );\n        })\n        .map((err) => {\n          const field = err.path.join('.');\n          return `${field}: ${err.message}`;\n        });\n\n      if (errorMessages.length > 0) {\n        return {\n          valid: false,\n          errorMessage: `Validation error: ${errorMessages.join(', ')}`,\n        };\n      }\n    } else {\n      const errorMsg =\n        error instanceof Error ? error.message : 'Unknown validation error';\n      return {\n        valid: false,\n        errorMessage: `Parameter validation failed: ${errorMsg}`,\n      };\n    }\n  }\n\n  return { valid: true };\n}\n\nexport async function executeAction(\n  activeAgent: PlaygroundAgent,\n  actionType: string,\n  actionSpace: DeviceAction<unknown>[],\n  value: FormValue,\n  options: ExecutionOptions,\n): Promise<unknown> {\n  const action = actionSpace?.find(\n    (a: DeviceAction<unknown>) =>\n      a.interfaceAlias === actionType || a.name === actionType,\n  );\n\n  if (action && typeof activeAgent.callActionInActionSpace === 'function') {\n    if (value.params) {\n      const parsedParams = await parseStructuredParams(\n        action,\n        value.params,\n        options,\n      );\n      return await activeAgent.callActionInActionSpace(\n        action.name,\n        parsedParams[0],\n      );\n    } else {\n      return await activeAgent.callActionInActionSpace(action.name, {\n        prompt: value.prompt,\n        ...options,\n      });\n    }\n  } else {\n    const prompt = value.prompt;\n\n    if (actionType === 'aiAssert') {\n      const { pass, thought } =\n        (await activeAgent?.aiAssert?.(prompt || '', undefined, {\n          keepRawResponse: true,\n          ...options,\n        })) || {};\n      return { pass: pass || false, thought: thought || '' };\n    }\n\n    // Fallback for methods not found in actionSpace\n    if (activeAgent && typeof activeAgent[actionType] === 'function') {\n      return await activeAgent[actionType](prompt, options);\n    }\n\n    throw new Error(`Unknown action type: ${actionType}`);\n  }\n}\n"],"names":["__webpack_require__","definition","key","Object","obj","prop","Symbol","dataExtractionAPIs","validationAPIs","noReplayAPIs","formatErrorMessage","e","errorMessage","parseStructuredParams","action","params","options","schema","keys","paramObj","undefined","validateStructuredParams","value","_action_paramSchema","paramsForValidation","locatorFieldKeys","findAllMidsceneLocatorField","error","zodError","errorMessages","err","path","field","errorMsg","Error","executeAction","activeAgent","actionType","actionSpace","a","parsedParams","prompt","pass","thought"],"mappings":"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"}