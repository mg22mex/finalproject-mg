{"version":3,"file":"server.js","sources":["webpack://@midscene/playground/webpack/runtime/compat_get_default_export","webpack://@midscene/playground/webpack/runtime/define_property_getters","webpack://@midscene/playground/webpack/runtime/has_own_property","webpack://@midscene/playground/webpack/runtime/make_namespace_object","webpack://@midscene/playground/./src/server.ts"],"sourcesContent":["// getDefaultExport function for compatibility with non-ESM modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};\n","__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n        if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n            Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n        }\n    }\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { randomUUID } from 'node:crypto';\nimport { existsSync, readFileSync, writeFileSync } from 'node:fs';\nimport type { Server } from 'node:http';\nimport { join } from 'node:path';\nimport type { Agent as PageAgent } from '@midscene/core/agent';\nimport type { AbstractInterface } from '@midscene/core/device';\nimport { getTmpDir } from '@midscene/core/utils';\nimport { PLAYGROUND_SERVER_PORT } from '@midscene/shared/constants';\nimport { overrideAIConfig } from '@midscene/shared/env';\nimport { ifInBrowser, ifInWorker } from '@midscene/shared/utils';\nimport cors from 'cors';\nimport dotenv from 'dotenv';\nimport express from 'express';\nimport { executeAction, formatErrorMessage } from './common';\nimport type { PlaygroundAgent } from './types';\n\nconst defaultPort = PLAYGROUND_SERVER_PORT;\n\nconst errorHandler = (err: any, req: any, res: any, next: any) => {\n  console.error(err);\n  res.status(500).json({\n    error: err.message,\n  });\n};\n\nconst setup = async () => {\n  if (!ifInBrowser && !ifInWorker) {\n    dotenv.config();\n  }\n};\n\nexport default class PlaygroundServer {\n  app: express.Application;\n  tmpDir: string;\n  server?: Server;\n  port?: number | null;\n  pageClass: new (\n    ...args: any[]\n  ) => AbstractInterface;\n  agentClass: new (\n    ...args: any[]\n  ) => PageAgent;\n  staticPath?: string;\n  taskProgressTips: Record<string, string>;\n  activeAgents: Record<string, PageAgent>;\n\n  constructor(\n    pageClass: new (...args: any[]) => AbstractInterface,\n    agentClass: new (...args: any[]) => PageAgent,\n    staticPath?: string,\n  ) {\n    this.app = express();\n    this.tmpDir = getTmpDir()!;\n    this.pageClass = pageClass;\n    this.agentClass = agentClass;\n    this.staticPath = staticPath;\n    this.taskProgressTips = {};\n    this.activeAgents = {};\n    setup();\n  }\n\n  filePathForUuid(uuid: string) {\n    return join(this.tmpDir, `${uuid}.json`);\n  }\n\n  saveContextFile(uuid: string, context: string) {\n    const tmpFile = this.filePathForUuid(uuid);\n    console.log(`save context file: ${tmpFile}`);\n    writeFileSync(tmpFile, context);\n    return tmpFile;\n  }\n\n  async launch(port?: number) {\n    this.port = port || defaultPort;\n    this.app.use(errorHandler);\n\n    this.app.use(\n      cors({\n        origin: '*',\n        credentials: true,\n      }),\n    );\n\n    this.app.get('/status', async (req, res) => {\n      // const modelName = g\n      res.send({\n        status: 'ok',\n      });\n    });\n\n    this.app.get('/context/:uuid', async (req, res) => {\n      const { uuid } = req.params;\n      const contextFile = this.filePathForUuid(uuid);\n\n      if (!existsSync(contextFile)) {\n        return res.status(404).json({\n          error: 'Context not found',\n        });\n      }\n\n      const context = readFileSync(contextFile, 'utf8');\n      res.json({\n        context,\n      });\n    });\n\n    this.app.get('/task-progress/:requestId', async (req, res) => {\n      const { requestId } = req.params;\n      res.json({\n        tip: this.taskProgressTips[requestId] || '',\n      });\n    });\n\n    this.app.post(\n      '/action-space',\n      express.json({ limit: '30mb' }),\n      async (req, res) => {\n        const { context } = req.body;\n\n        if (!context) {\n          return res.status(400).json({\n            error: 'context is required',\n          });\n        }\n\n        try {\n          // Create agent with context like in /execute\n          const page = new this.pageClass(context);\n          const actionSpace = await page.actionSpace();\n\n          // Process actionSpace to make paramSchema serializable\n          const processedActionSpace = actionSpace.map((action: any) => {\n            if (action.paramSchema && typeof action.paramSchema === 'object') {\n              // Extract shape information from Zod schema\n              let processedSchema = null;\n\n              try {\n                // Extract shape from runtime Zod object\n                if (\n                  action.paramSchema.shape &&\n                  typeof action.paramSchema.shape === 'object'\n                ) {\n                  processedSchema = {\n                    type: 'ZodObject',\n                    shape: action.paramSchema.shape,\n                  };\n                }\n              } catch (e) {\n                console.warn(\n                  'Failed to process paramSchema for action:',\n                  action.name,\n                  e,\n                );\n              }\n\n              return {\n                ...action,\n                paramSchema: processedSchema,\n              };\n            }\n            return action;\n          });\n\n          res.json(processedActionSpace);\n        } catch (error: any) {\n          console.error('Failed to get action space:', error);\n          res.status(500).json({\n            error: error.message,\n          });\n        }\n      },\n    );\n\n    // -------------------------\n    // actions from report file\n    this.app.post(\n      '/playground-with-context',\n      express.json({ limit: '50mb' }),\n      async (req, res) => {\n        const context = req.body.context;\n\n        if (!context) {\n          return res.status(400).json({\n            error: 'context is required',\n          });\n        }\n\n        const uuid = randomUUID();\n        this.saveContextFile(uuid, context);\n        return res.json({\n          location: `/playground/${uuid}`,\n          uuid,\n        });\n      },\n    );\n\n    this.app.post(\n      '/execute',\n      express.json({ limit: '30mb' }),\n      async (req, res) => {\n        const {\n          context,\n          type,\n          prompt,\n          params,\n          requestId,\n          deepThink,\n          screenshotIncluded,\n          domIncluded,\n        } = req.body;\n\n        if (!context) {\n          return res.status(400).json({\n            error: 'context is required',\n          });\n        }\n\n        if (!type) {\n          return res.status(400).json({\n            error: 'type is required',\n          });\n        }\n\n        // build an agent with context\n        const page = new this.pageClass(context);\n        const agent = new this.agentClass(page);\n\n        if (requestId) {\n          this.taskProgressTips[requestId] = '';\n          this.activeAgents[requestId] = agent;\n\n          agent.onTaskStartTip = (tip: string) => {\n            this.taskProgressTips[requestId] = tip;\n          };\n        }\n\n        const response: {\n          result: any;\n          dump: string | null;\n          error: string | null;\n          reportHTML: string | null;\n          requestId?: string;\n        } = {\n          result: null,\n          dump: null,\n          error: null,\n          reportHTML: null,\n          requestId,\n        };\n\n        const startTime = Date.now();\n        try {\n          // Get action space to check for dynamic actions\n          const actionSpace = await page.actionSpace();\n\n          // Prepare value object for executeAction\n          const value = {\n            type,\n            prompt,\n            params,\n          };\n\n          response.result = await executeAction(\n            agent as unknown as PlaygroundAgent,\n            type,\n            actionSpace,\n            value,\n            {\n              deepThink: deepThink || false,\n              screenshotIncluded,\n              domIncluded,\n            },\n          );\n        } catch (error: any) {\n          response.error = formatErrorMessage(error);\n        }\n\n        try {\n          response.dump = JSON.parse(agent.dumpDataString());\n          response.reportHTML = agent.reportHTMLString() || null;\n\n          agent.writeOutActionDumps();\n          agent.destroy();\n        } catch (error: any) {\n          console.error(\n            `write out dump failed: requestId: ${requestId}, ${error.message}`,\n          );\n        }\n\n        res.send(response);\n        const timeCost = Date.now() - startTime;\n\n        if (response.error) {\n          console.error(\n            `handle request failed after ${timeCost}ms: requestId: ${requestId}, ${response.error}`,\n          );\n        } else {\n          console.log(\n            `handle request done after ${timeCost}ms: requestId: ${requestId}`,\n          );\n        }\n\n        // Clean up the agent from activeAgents after execution completes\n        if (requestId && this.activeAgents[requestId]) {\n          delete this.activeAgents[requestId];\n        }\n      },\n    );\n\n    this.app.get('/cancel/:requestId', async (req, res) => {\n      const { requestId } = req.params;\n\n      if (!requestId) {\n        return res.status(400).json({\n          error: 'requestId is required',\n        });\n      }\n\n      const agent = this.activeAgents[requestId];\n      if (!agent) {\n        return res.status(404).json({\n          error: 'No active agent found for this requestId',\n        });\n      }\n\n      try {\n        await agent.destroy();\n        delete this.activeAgents[requestId];\n        res.json({ status: 'cancelled' });\n      } catch (error: any) {\n        console.error(`Failed to cancel agent: ${error.message}`);\n        res.status(500).json({\n          error: `Failed to cancel: ${error.message}`,\n        });\n      }\n    });\n\n    this.app.post(\n      '/config',\n      express.json({ limit: '1mb' }),\n      async (req, res) => {\n        const { aiConfig } = req.body;\n\n        if (!aiConfig || typeof aiConfig !== 'object') {\n          return res.status(400).json({\n            error: 'aiConfig is required and must be an object',\n          });\n        }\n\n        try {\n          overrideAIConfig(aiConfig);\n\n          return res.json({\n            status: 'ok',\n            message: 'AI config updated successfully',\n          });\n        } catch (error: any) {\n          console.error(`Failed to update AI config: ${error.message}`);\n          return res.status(500).json({\n            error: `Failed to update AI config: ${error.message}`,\n          });\n        }\n      },\n    );\n\n    // Set up static file serving after all API routes are defined\n    if (this.staticPath) {\n      this.app.get('/', (_req, res) => {\n        // compatible with windows\n        res.redirect('/index.html');\n      });\n\n      this.app.get('*', (req, res) => {\n        const requestedPath = join(this.staticPath!, req.path);\n        if (existsSync(requestedPath)) {\n          res.sendFile(requestedPath);\n        } else {\n          res.sendFile(join(this.staticPath!, 'index.html'));\n        }\n      });\n    }\n\n    return new Promise((resolve) => {\n      const port = this.port;\n      this.server = this.app.listen(port, () => {\n        resolve(this);\n      });\n    });\n  }\n\n  close() {\n    // close the server\n    if (this.server) {\n      return this.server.close();\n    }\n  }\n}\n"],"names":["__webpack_require__","module","getter","definition","key","Object","obj","prop","Symbol","defaultPort","PLAYGROUND_SERVER_PORT","errorHandler","err","req","res","next","console","setup","ifInBrowser","ifInWorker","dotenv","PlaygroundServer","uuid","join","context","tmpFile","writeFileSync","port","cors","contextFile","existsSync","readFileSync","requestId","express","page","actionSpace","processedActionSpace","action","processedSchema","e","error","randomUUID","type","prompt","params","deepThink","screenshotIncluded","domIncluded","agent","tip","response","startTime","Date","value","executeAction","formatErrorMessage","JSON","timeCost","aiConfig","overrideAIConfig","_req","requestedPath","Promise","resolve","pageClass","agentClass","staticPath","getTmpDir"],"mappings":"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"}