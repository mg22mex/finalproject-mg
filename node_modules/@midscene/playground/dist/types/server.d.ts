import type { Server } from 'node:http';
import type { Agent as PageAgent } from '@midscene/core/agent';
import type { AbstractInterface } from '@midscene/core/device';
import express from 'express';
export default class PlaygroundServer {
    app: express.Application;
    tmpDir: string;
    server?: Server;
    port?: number | null;
    pageClass: new (...args: any[]) => AbstractInterface;
    agentClass: new (...args: any[]) => PageAgent;
    staticPath?: string;
    taskProgressTips: Record<string, string>;
    activeAgents: Record<string, PageAgent>;
    constructor(pageClass: new (...args: any[]) => AbstractInterface, agentClass: new (...args: any[]) => PageAgent, staticPath?: string);
    filePathForUuid(uuid: string): string;
    saveContextFile(uuid: string, context: string): string;
    launch(port?: number): Promise<unknown>;
    close(): Server<typeof import("http").IncomingMessage, typeof import("http").ServerResponse> | undefined;
}
