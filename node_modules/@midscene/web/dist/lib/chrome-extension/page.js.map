{"version":3,"file":"chrome-extension/page.js","sources":["webpack://@midscene/web/webpack/runtime/define_property_getters","webpack://@midscene/web/webpack/runtime/has_own_property","webpack://@midscene/web/webpack/runtime/make_namespace_object","webpack://@midscene/web/./src/chrome-extension/page.ts"],"sourcesContent":["__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n        if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n            Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n        }\n    }\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","/// <reference types=\"chrome\" />\n\n/*\n  It is used to interact with the page tab from the chrome extension.\n  The page must be active when interacting with it.\n*/\n\nimport { limitOpenNewTabScript } from '@/web-element';\nimport type { ElementTreeNode, Point, Size, UIContext } from '@midscene/core';\nimport type { AbstractInterface, DeviceAction } from '@midscene/core/device';\nimport type { ElementInfo } from '@midscene/shared/extractor';\nimport { treeToList } from '@midscene/shared/extractor';\nimport { createImgBase64ByFormat } from '@midscene/shared/img';\nimport { assert } from '@midscene/shared/utils';\nimport type { Protocol as CDPTypes } from 'devtools-protocol';\nimport { WebPageContextParser } from '../web-element';\nimport {\n  type KeyInput,\n  type MouseButton,\n  commonWebActionsForWebPage,\n} from '../web-page';\nimport { CdpKeyboard } from './cdpInput';\nimport {\n  getHtmlElementScript,\n  injectStopWaterFlowAnimation,\n  injectWaterFlowAnimation,\n} from './dynamic-scripts';\n\nfunction sleep(ms: number) {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}\n\nexport default class ChromeExtensionProxyPage implements AbstractInterface {\n  interfaceType = 'chrome-extension-proxy';\n\n  public forceSameTabNavigation: boolean;\n\n  private viewportSize?: Size;\n\n  private activeTabId: number | null = null;\n\n  private tabIdOfDebuggerAttached: number | null = null;\n\n  private attachingDebugger: Promise<void> | null = null;\n\n  private destroyed = false;\n\n  private isMobileEmulation: boolean | null = null;\n\n  public _continueWhenFailedToAttachDebugger = false;\n\n  constructor(forceSameTabNavigation: boolean) {\n    this.forceSameTabNavigation = forceSameTabNavigation;\n  }\n\n  actionSpace(): DeviceAction[] {\n    return commonWebActionsForWebPage(this);\n  }\n\n  public async setActiveTabId(tabId: number) {\n    if (this.activeTabId) {\n      throw new Error(\n        `Active tab id is already set, which is ${this.activeTabId}, cannot set it to ${tabId}`,\n      );\n    }\n    await chrome.tabs.update(tabId, { active: true });\n    this.activeTabId = tabId;\n  }\n\n  public async getActiveTabId() {\n    return this.activeTabId;\n  }\n\n  /**\n   * Get a list of current tabs\n   * @returns {Promise<Array<{id: number, title: string, url: string}>>}\n   */\n  public async getBrowserTabList(): Promise<\n    { id: string; title: string; url: string; currentActiveTab: boolean }[]\n  > {\n    const tabs = await chrome.tabs.query({ currentWindow: true });\n    return tabs\n      .map((tab) => ({\n        id: `${tab.id}`,\n        title: tab.title,\n        url: tab.url,\n        currentActiveTab: tab.active,\n      }))\n      .filter((tab) => tab.id && tab.title && tab.url) as {\n      id: string;\n      title: string;\n      url: string;\n      currentActiveTab: boolean;\n    }[];\n  }\n\n  public async getTabIdOrConnectToCurrentTab() {\n    if (this.activeTabId) {\n      // alway keep on the connected tab\n      return this.activeTabId;\n    }\n    const tabId = await chrome.tabs\n      .query({ active: true, currentWindow: true })\n      .then((tabs) => tabs[0]?.id);\n    this.activeTabId = tabId || 0;\n    return this.activeTabId;\n  }\n\n  private async attachDebugger() {\n    assert(!this.destroyed, 'Page is destroyed');\n\n    // If already attaching, wait for it to complete\n    if (this.attachingDebugger) {\n      await this.attachingDebugger;\n      return;\n    }\n\n    // Create new attaching promise\n    this.attachingDebugger = (async () => {\n      const url = await this.url();\n      let error: Error | null = null;\n      if (url.startsWith('chrome://')) {\n        throw new Error(\n          'Cannot attach debugger to chrome:// pages, please use Midscene in a normal page with http://, https:// or file://',\n        );\n      }\n\n      try {\n        const currentTabId = await this.getTabIdOrConnectToCurrentTab();\n\n        if (this.tabIdOfDebuggerAttached === currentTabId) {\n          // already attached\n          return;\n        }\n        if (\n          this.tabIdOfDebuggerAttached &&\n          this.tabIdOfDebuggerAttached !== currentTabId\n        ) {\n          // detach the previous tab\n          console.log(\n            'detach the previous tab',\n            this.tabIdOfDebuggerAttached,\n            '->',\n            currentTabId,\n          );\n          try {\n            await this.detachDebugger(this.tabIdOfDebuggerAttached);\n          } catch (error) {\n            console.error('Failed to detach debugger', error);\n          }\n        }\n\n        // detach any debugger attached to the tab\n        console.log('attaching debugger', currentTabId);\n        try {\n          await chrome.debugger.attach({ tabId: currentTabId }, '1.3');\n        } catch (e) {\n          if (this._continueWhenFailedToAttachDebugger) {\n            console.warn(\n              'Failed to attach debugger, but the script will continue as if the debugger is attached since the _continueWhenFailedToAttachDebugger is true',\n              e,\n            );\n          } else {\n            throw e;\n          }\n        }\n\n        // wait util the debugger banner in Chrome appears\n        await sleep(500);\n\n        this.tabIdOfDebuggerAttached = currentTabId;\n\n        await this.enableWaterFlowAnimation();\n      } catch (e) {\n        console.error('Failed to attach debugger', e);\n        error = e as Error;\n      } finally {\n        this.attachingDebugger = null;\n      }\n      if (error) {\n        throw error;\n      }\n    })();\n\n    await this.attachingDebugger;\n  }\n\n  private async showMousePointer(x: number, y: number) {\n    // update mouse pointer while redirecting\n    const pointerScript = `(() => {\n      if(typeof window.midsceneWaterFlowAnimation !== 'undefined') {\n        window.midsceneWaterFlowAnimation.enable();\n        window.midsceneWaterFlowAnimation.showMousePointer(${x}, ${y});\n      } else {\n        console.log('midsceneWaterFlowAnimation is not defined');\n      }\n    })()`;\n\n    await this.sendCommandToDebugger('Runtime.evaluate', {\n      expression: `${pointerScript}`,\n    });\n  }\n\n  private async hideMousePointer() {\n    await this.sendCommandToDebugger('Runtime.evaluate', {\n      expression: `(() => {\n        if(typeof window.midsceneWaterFlowAnimation !== 'undefined') {\n          window.midsceneWaterFlowAnimation.hideMousePointer();\n        }\n      })()`,\n    });\n  }\n\n  private async detachDebugger(tabId?: number) {\n    const tabIdToDetach = tabId || this.tabIdOfDebuggerAttached;\n    console.log('detaching debugger', tabIdToDetach);\n    if (!tabIdToDetach) {\n      console.warn('No tab id to detach');\n      return;\n    }\n\n    try {\n      await this.disableWaterFlowAnimation(tabIdToDetach);\n      await sleep(200); // wait for the animation to stop\n    } catch (error) {\n      console.warn('Failed to disable water flow animation', error);\n    }\n\n    try {\n      await chrome.debugger.detach({ tabId: tabIdToDetach });\n    } catch (error) {\n      // maybe tab is closed ?\n      console.warn('Failed to detach debugger', error);\n    }\n    this.tabIdOfDebuggerAttached = null;\n  }\n\n  private async enableWaterFlowAnimation() {\n    // limit open page in new tab\n    if (this.forceSameTabNavigation) {\n      await chrome.debugger.sendCommand(\n        { tabId: this.tabIdOfDebuggerAttached! },\n        'Runtime.evaluate',\n        {\n          expression: limitOpenNewTabScript,\n        },\n      );\n    }\n\n    const script = await injectWaterFlowAnimation();\n    // we will call this function in sendCommandToDebugger, so we have to use the chrome.debugger.sendCommand\n    await chrome.debugger.sendCommand(\n      { tabId: this.tabIdOfDebuggerAttached! },\n      'Runtime.evaluate',\n      {\n        expression: script,\n      },\n    );\n  }\n\n  private async disableWaterFlowAnimation(tabId: number) {\n    const script = await injectStopWaterFlowAnimation();\n\n    await chrome.debugger.sendCommand({ tabId }, 'Runtime.evaluate', {\n      expression: script,\n    });\n  }\n\n  private async sendCommandToDebugger<ResponseType = any, RequestType = any>(\n    command: string,\n    params: RequestType,\n  ): Promise<ResponseType> {\n    await this.attachDebugger();\n\n    assert(this.tabIdOfDebuggerAttached, 'Debugger is not attached');\n\n    // wo don't have to await it\n    this.enableWaterFlowAnimation();\n    return (await chrome.debugger.sendCommand(\n      { tabId: this.tabIdOfDebuggerAttached! },\n      command,\n      params as any,\n    )) as ResponseType;\n  }\n\n  private async getPageContentByCDP() {\n    const script = await getHtmlElementScript();\n\n    // check tab url\n    await this.sendCommandToDebugger<\n      CDPTypes.Runtime.EvaluateResponse,\n      CDPTypes.Runtime.EvaluateRequest\n    >('Runtime.evaluate', {\n      expression: script,\n    });\n\n    const expression = () => {\n      (window as any).midscene_element_inspector.setNodeHashCacheListOnWindow();\n\n      const tree = (\n        window as any\n      ).midscene_element_inspector.webExtractNodeTree();\n\n      return {\n        tree,\n        size: {\n          width: document.documentElement.clientWidth,\n          height: document.documentElement.clientHeight,\n          dpr: window.devicePixelRatio,\n        },\n      };\n    };\n    const returnValue = await this.sendCommandToDebugger<\n      CDPTypes.Runtime.EvaluateResponse,\n      CDPTypes.Runtime.EvaluateRequest\n    >('Runtime.evaluate', {\n      expression: `(${expression.toString()})()`,\n      returnByValue: true,\n    });\n\n    if (!returnValue.result.value) {\n      const errorDescription =\n        returnValue.exceptionDetails?.exception?.description || '';\n      if (!errorDescription) {\n        console.error('returnValue from cdp', returnValue);\n      }\n      throw new Error(\n        `Failed to get page content from page, error: ${errorDescription}`,\n      );\n    }\n\n    return returnValue.result.value as {\n      tree: ElementTreeNode<ElementInfo>;\n      size: Size;\n    };\n  }\n\n  public async evaluateJavaScript(script: string) {\n    return this.sendCommandToDebugger('Runtime.evaluate', {\n      expression: script,\n    });\n  }\n\n  async beforeAction(): Promise<void> {\n    // current implementation is wait until domReadyState is complete\n    try {\n      await this.waitUntilNetworkIdle();\n    } catch (error) {\n      // console.warn('Failed to wait until network idle', error);\n    }\n  }\n\n  private async waitUntilNetworkIdle() {\n    const timeout = 10000;\n    const startTime = Date.now();\n    let lastReadyState = '';\n    while (Date.now() - startTime < timeout) {\n      const result = await this.sendCommandToDebugger('Runtime.evaluate', {\n        expression: 'document.readyState',\n      });\n      lastReadyState = result.result.value;\n      if (lastReadyState === 'complete') {\n        await new Promise((resolve) => setTimeout(resolve, 300));\n        return;\n      }\n      await new Promise((resolve) => setTimeout(resolve, 300));\n    }\n    throw new Error(\n      `Failed to wait until network idle, last readyState: ${lastReadyState}`,\n    );\n  }\n\n  // @deprecated\n  async getElementsInfo() {\n    const tree = await this.getElementsNodeTree();\n    return treeToList(tree);\n  }\n\n  async getXpathsById(id: string) {\n    const script = await getHtmlElementScript();\n\n    // check tab url\n    await this.sendCommandToDebugger<\n      CDPTypes.Runtime.EvaluateResponse,\n      CDPTypes.Runtime.EvaluateRequest\n    >('Runtime.evaluate', {\n      expression: script,\n    });\n\n    const result = await this.sendCommandToDebugger('Runtime.evaluate', {\n      expression: `window.midscene_element_inspector.getXpathsById('${id}')`,\n      returnByValue: true,\n    });\n    return result.result.value;\n  }\n\n  async getXpathsByPoint(point: Point, isOrderSensitive: boolean) {\n    const script = await getHtmlElementScript();\n\n    await this.sendCommandToDebugger<\n      CDPTypes.Runtime.EvaluateResponse,\n      CDPTypes.Runtime.EvaluateRequest\n    >('Runtime.evaluate', {\n      expression: script,\n    });\n\n    const result = await this.sendCommandToDebugger('Runtime.evaluate', {\n      expression: `window.midscene_element_inspector.getXpathsByPoint({left: ${point.left}, top: ${point.top}}, ${isOrderSensitive})`,\n      returnByValue: true,\n    });\n    return result.result.value;\n  }\n\n  async getElementInfoByXpath(xpath: string) {\n    const script = await getHtmlElementScript();\n\n    // check tab url\n    await this.sendCommandToDebugger<\n      CDPTypes.Runtime.EvaluateResponse,\n      CDPTypes.Runtime.EvaluateRequest\n    >('Runtime.evaluate', {\n      expression: script,\n    });\n    const result = await this.sendCommandToDebugger('Runtime.evaluate', {\n      expression: `window.midscene_element_inspector.getElementInfoByXpath('${xpath}')`,\n      returnByValue: true,\n    });\n    return result.result.value;\n  }\n\n  async getElementsNodeTree() {\n    await this.hideMousePointer();\n    const content = await this.getPageContentByCDP();\n    if (content?.size) {\n      this.viewportSize = content.size;\n    }\n\n    return content?.tree || { node: null, children: [] };\n  }\n\n  async getContext(): Promise<UIContext> {\n    return await WebPageContextParser(this, {});\n  }\n\n  async size() {\n    if (this.viewportSize) return this.viewportSize;\n    const content = await this.getPageContentByCDP();\n    return content.size;\n  }\n\n  async screenshotBase64() {\n    // screenshot by cdp\n    await this.hideMousePointer();\n    const format = 'jpeg';\n    const base64 = await this.sendCommandToDebugger('Page.captureScreenshot', {\n      format,\n      quality: 90,\n    });\n    return createImgBase64ByFormat(format, base64.data);\n  }\n\n  async url() {\n    const tabId = await this.getTabIdOrConnectToCurrentTab();\n    const url = await chrome.tabs.get(tabId).then((tab) => tab.url);\n    return url || '';\n  }\n\n  async scrollUntilTop(startingPoint?: Point) {\n    if (startingPoint) {\n      await this.mouse.move(startingPoint.left, startingPoint.top);\n    }\n    return this.mouse.wheel(0, -9999999);\n  }\n\n  async scrollUntilBottom(startingPoint?: Point) {\n    if (startingPoint) {\n      await this.mouse.move(startingPoint.left, startingPoint.top);\n    }\n    return this.mouse.wheel(0, 9999999);\n  }\n\n  async scrollUntilLeft(startingPoint?: Point) {\n    if (startingPoint) {\n      await this.mouse.move(startingPoint.left, startingPoint.top);\n    }\n    return this.mouse.wheel(-9999999, 0);\n  }\n\n  async scrollUntilRight(startingPoint?: Point) {\n    if (startingPoint) {\n      await this.mouse.move(startingPoint.left, startingPoint.top);\n    }\n    return this.mouse.wheel(9999999, 0);\n  }\n\n  async scrollUp(distance?: number, startingPoint?: Point) {\n    const { height } = await this.size();\n    const scrollDistance = distance || height * 0.7;\n    return this.mouse.wheel(\n      0,\n      -scrollDistance,\n      startingPoint?.left,\n      startingPoint?.top,\n    );\n  }\n\n  async scrollDown(distance?: number, startingPoint?: Point) {\n    const { height } = await this.size();\n    const scrollDistance = distance || height * 0.7;\n    return this.mouse.wheel(\n      0,\n      scrollDistance,\n      startingPoint?.left,\n      startingPoint?.top,\n    );\n  }\n\n  async scrollLeft(distance?: number, startingPoint?: Point) {\n    const { width } = await this.size();\n    const scrollDistance = distance || width * 0.7;\n    return this.mouse.wheel(\n      -scrollDistance,\n      0,\n      startingPoint?.left,\n      startingPoint?.top,\n    );\n  }\n\n  async scrollRight(distance?: number, startingPoint?: Point) {\n    const { width } = await this.size();\n    const scrollDistance = distance || width * 0.7;\n    return this.mouse.wheel(\n      scrollDistance,\n      0,\n      startingPoint?.left,\n      startingPoint?.top,\n    );\n  }\n\n  async clearInput(element: ElementInfo) {\n    if (!element) {\n      console.warn('No element to clear input');\n      return;\n    }\n\n    await this.mouse.click(element.center[0], element.center[1]);\n\n    await this.sendCommandToDebugger('Input.dispatchKeyEvent', {\n      type: 'keyDown',\n      commands: ['selectAll'],\n    });\n\n    await this.sendCommandToDebugger('Input.dispatchKeyEvent', {\n      type: 'keyUp',\n      commands: ['selectAll'],\n    });\n\n    await sleep(100);\n\n    await this.keyboard.press({\n      key: 'Backspace',\n    });\n  }\n\n  private latestMouseX = 100;\n  private latestMouseY = 100;\n\n  mouse = {\n    click: async (\n      x: number,\n      y: number,\n      options?: { button?: MouseButton; count?: number },\n    ) => {\n      const { button = 'left', count = 1 } = options || {};\n      await this.mouse.move(x, y);\n      // detect if the page is in mobile emulation mode\n      if (this.isMobileEmulation === null) {\n        const result = await this.sendCommandToDebugger('Runtime.evaluate', {\n          expression: `(() => {\n            return /Android|iPhone|iPad|iPod|Mobile/i.test(navigator.userAgent);\n          })()`,\n          returnByValue: true,\n        });\n        this.isMobileEmulation = result?.result?.value;\n      }\n\n      if (this.isMobileEmulation && button === 'left') {\n        // in mobile emulation mode, directly inject click event\n        const touchPoints = [{ x: Math.round(x), y: Math.round(y) }];\n        await this.sendCommandToDebugger('Input.dispatchTouchEvent', {\n          type: 'touchStart',\n          touchPoints,\n          modifiers: 0,\n        });\n\n        await this.sendCommandToDebugger('Input.dispatchTouchEvent', {\n          type: 'touchEnd',\n          touchPoints: [],\n          modifiers: 0,\n        });\n      } else {\n        // standard mousePressed + mouseReleased\n        await this.sendCommandToDebugger('Input.dispatchMouseEvent', {\n          type: 'mousePressed',\n          x,\n          y,\n          button,\n          clickCount: count,\n        });\n        await this.sendCommandToDebugger('Input.dispatchMouseEvent', {\n          type: 'mouseReleased',\n          x,\n          y,\n          button,\n          clickCount: count,\n        });\n      }\n    },\n    wheel: async (\n      deltaX: number,\n      deltaY: number,\n      startX?: number,\n      startY?: number,\n    ) => {\n      const finalX = startX || this.latestMouseX;\n      const finalY = startY || this.latestMouseY;\n      await this.showMousePointer(finalX, finalY);\n      await this.sendCommandToDebugger('Input.dispatchMouseEvent', {\n        type: 'mouseWheel',\n        x: finalX,\n        y: finalY,\n        deltaX,\n        deltaY,\n      });\n      this.latestMouseX = finalX;\n      this.latestMouseY = finalY;\n    },\n    move: async (x: number, y: number) => {\n      await this.showMousePointer(x, y);\n      await this.sendCommandToDebugger('Input.dispatchMouseEvent', {\n        type: 'mouseMoved',\n        x,\n        y,\n      });\n      this.latestMouseX = x;\n      this.latestMouseY = y;\n    },\n    drag: async (\n      from: { x: number; y: number },\n      to: { x: number; y: number },\n    ) => {\n      await this.mouse.move(from.x, from.y);\n\n      await sleep(200);\n      await this.sendCommandToDebugger('Input.dispatchMouseEvent', {\n        type: 'mousePressed',\n        x: from.x,\n        y: from.y,\n        button: 'left',\n        clickCount: 1,\n      });\n\n      await sleep(300);\n\n      await this.sendCommandToDebugger('Input.dispatchMouseEvent', {\n        type: 'mouseMoved',\n        x: to.x,\n        y: to.y,\n      });\n\n      await sleep(500);\n\n      await this.sendCommandToDebugger('Input.dispatchMouseEvent', {\n        type: 'mouseReleased',\n        x: to.x,\n        y: to.y,\n        button: 'left',\n        clickCount: 1,\n      });\n\n      await sleep(200);\n\n      await this.mouse.move(to.x, to.y);\n    },\n  };\n\n  keyboard = {\n    type: async (text: string) => {\n      const cdpKeyboard = new CdpKeyboard({\n        send: this.sendCommandToDebugger.bind(this),\n      });\n      await cdpKeyboard.type(text, { delay: 0 });\n    },\n    press: async (\n      action:\n        | { key: KeyInput; command?: string }\n        | { key: KeyInput; command?: string }[],\n    ) => {\n      const cdpKeyboard = new CdpKeyboard({\n        send: this.sendCommandToDebugger.bind(this),\n      });\n      const keys = Array.isArray(action) ? action : [action];\n      for (const k of keys) {\n        const commands = k.command ? [k.command] : [];\n        await cdpKeyboard.down(k.key, { commands });\n      }\n      for (const k of [...keys].reverse()) {\n        await cdpKeyboard.up(k.key);\n      }\n    },\n  };\n\n  async destroy(): Promise<void> {\n    this.activeTabId = null;\n    await this.detachDebugger();\n    this.destroyed = true;\n  }\n}\n"],"names":["__webpack_require__","definition","key","Object","obj","prop","Symbol","sleep","ms","Promise","resolve","setTimeout","ChromeExtensionProxyPage","commonWebActionsForWebPage","tabId","Error","chrome","tabs","tab","_tabs_","assert","url","error","currentTabId","console","e","x","y","pointerScript","tabIdToDetach","limitOpenNewTabScript","script","injectWaterFlowAnimation","injectStopWaterFlowAnimation","command","params","getHtmlElementScript","expression","window","tree","document","returnValue","_returnValue_exceptionDetails_exception","errorDescription","timeout","startTime","Date","lastReadyState","result","treeToList","id","point","isOrderSensitive","xpath","content","WebPageContextParser","format","base64","createImgBase64ByFormat","startingPoint","distance","height","scrollDistance","width","element","forceSameTabNavigation","options","button","count","_result_result","touchPoints","Math","deltaX","deltaY","startX","startY","finalX","finalY","from","to","text","cdpKeyboard","CdpKeyboard","action","keys","Array","k","commands"],"mappings":"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"}