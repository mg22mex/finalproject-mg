{"version":3,"file":"bridge-mode/common.js","sources":["webpack://@midscene/web/webpack/runtime/define_property_getters","webpack://@midscene/web/webpack/runtime/has_own_property","webpack://@midscene/web/webpack/runtime/make_namespace_object","webpack://@midscene/web/./src/bridge-mode/common.ts"],"sourcesContent":["__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n        if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n            Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n        }\n    }\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export const DefaultBridgeServerPort = 3766;\nexport const DefaultLocalEndpoint = `http://127.0.0.1:${DefaultBridgeServerPort}`;\nexport const BridgeCallTimeout = 30000;\n\nexport enum BridgeEvent {\n  Call = 'bridge-call',\n  CallResponse = 'bridge-call-response',\n  UpdateAgentStatus = 'bridge-update-agent-status',\n  Message = 'bridge-message',\n  Connected = 'bridge-connected',\n  Refused = 'bridge-refused',\n  ConnectNewTabWithUrl = 'connectNewTabWithUrl',\n  ConnectCurrentTab = 'connectCurrentTab',\n  GetBrowserTabList = 'getBrowserTabList',\n  SetDestroyOptions = 'setDestroyOptions',\n  SetActiveTabId = 'setActiveTabId',\n}\n\nexport const BridgeSignalKill = 'MIDSCENE_BRIDGE_SIGNAL_KILL';\n\nexport interface BridgeConnectTabOptions {\n  /**\n   * If true, the page will always track the active tab.\n   * @default true\n   */\n  forceSameTabNavigation?: boolean;\n}\n\nexport enum MouseEvent {\n  PREFIX = 'mouse.',\n  Click = 'mouse.click',\n  Wheel = 'mouse.wheel',\n  Move = 'mouse.move',\n  Drag = 'mouse.drag',\n}\n\nexport enum KeyboardEvent {\n  PREFIX = 'keyboard.',\n  Type = 'keyboard.type',\n  Press = 'keyboard.press',\n}\n\nexport const BridgePageType = 'page-over-chrome-extension-bridge';\n\nexport const BridgeErrorCodeNoClientConnected = 'no-client-connected';\n\nexport interface BridgeCall {\n  method: string;\n  args: any[];\n  response: any;\n  callTime: number;\n  responseTime: number;\n  callback: (error: Error | undefined, response: any) => void;\n  error?: Error;\n}\n\nexport interface BridgeCallRequest {\n  id: string;\n  method: string;\n  args: any[];\n}\n\nexport interface BridgeCallResponse {\n  id: string;\n  response: any;\n  error?: any;\n}\n\nexport interface BridgeConnectedEventPayload {\n  version: string;\n}\n"],"names":["__webpack_require__","definition","key","Object","obj","prop","Symbol","DefaultBridgeServerPort","DefaultLocalEndpoint","BridgeCallTimeout","BridgeEvent","BridgeSignalKill","MouseEvent","KeyboardEvent","BridgePageType","BridgeErrorCodeNoClientConnected"],"mappings":";;;IAAAA,oBAAoB,CAAC,GAAG,CAAC,UAASC;QACjC,IAAI,IAAIC,OAAOD,WACR,IAAGD,oBAAoB,CAAC,CAACC,YAAYC,QAAQ,CAACF,oBAAoB,CAAC,CAAC,UAASE,MACzEC,OAAO,cAAc,CAAC,UAASD,KAAK;YAAE,YAAY;YAAM,KAAKD,UAAU,CAACC,IAAI;QAAC;IAGzF;;;ICNAF,oBAAoB,CAAC,GAAG,CAACI,KAAKC,OAAUF,OAAO,SAAS,CAAC,cAAc,CAAC,IAAI,CAACC,KAAKC;;;ICClFL,oBAAoB,CAAC,GAAG,CAAC;QACxB,IAAG,AAAkB,eAAlB,OAAOM,UAA0BA,OAAO,WAAW,EACrDH,OAAO,cAAc,CAAC,UAASG,OAAO,WAAW,EAAE;YAAE,OAAO;QAAS;QAEtEH,OAAO,cAAc,CAAC,UAAS,cAAc;YAAE,OAAO;QAAK;IAC5D;;;;;;;;;;;;;;;ACNO,MAAMI,0BAA0B;AAChC,MAAMC,uBAAuB,CAAC,iBAAiB,EAAED,yBAAyB;AAC1E,MAAME,oBAAoB;AAE1B,IAAKC,cAAAA,WAAAA,GAAAA,SAAAA,WAAW;;;;;;;;;;;;WAAXA;;AAcL,MAAMC,mBAAmB;AAUzB,IAAKC,aAAAA,WAAAA,GAAAA,SAAAA,UAAU;;;;;;WAAVA;;AAQL,IAAKC,gBAAAA,WAAAA,GAAAA,SAAAA,aAAa;;;;WAAbA;;AAML,MAAMC,iBAAiB;AAEvB,MAAMC,mCAAmC"}