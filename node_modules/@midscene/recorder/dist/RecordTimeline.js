import { jsx, jsxs } from "react/jsx-runtime";
import { AimOutlined, CompassOutlined, CopyOutlined, EditOutlined, KeyOutlined, VerticalAlignTopOutlined } from "@ant-design/icons";
import { Button, Card, Image, Space, Timeline, Typography, message } from "antd";
import { useEffect, useState } from "react";
import { ShinyText } from "./components/shiny-text.js";
import "./RecordTimeline.css";
const { Text } = Typography;
const RecordTimeline = ({ events, onEventClick })=>{
    const [expandedEvents, setExpandedEvents] = useState(new Set());
    console.log('events', events);
    useEffect(()=>{
        if (events.length > 0) {
            const timeline = document.querySelector('.ant-timeline');
            if (timeline) timeline.scrollIntoView({
                behavior: 'smooth',
                block: 'end'
            });
        }
    }, [
        events.length
    ]);
    const toggleEventExpansion = (index)=>{
        const newExpanded = new Set(expandedEvents);
        if (newExpanded.has(index)) newExpanded.delete(index);
        else newExpanded.add(index);
        setExpandedEvents(newExpanded);
    };
    const truncateJsonStrings = (obj, maxLength = 30)=>{
        if ('string' == typeof obj) return obj.length > maxLength ? `${obj.substring(0, maxLength)}...` : obj;
        if (Array.isArray(obj)) return obj.map((item)=>truncateJsonStrings(item, maxLength));
        if (obj && 'object' == typeof obj) {
            const truncated = {};
            for(const key in obj)if (Object.prototype.hasOwnProperty.call(obj, key)) truncated[key] = truncateJsonStrings(obj[key], maxLength);
            return truncated;
        }
        return obj;
    };
    const copyToClipboard = (text)=>{
        navigator.clipboard.writeText(text).then(()=>{
            message.success('JSON copied to clipboard');
        }).catch(()=>{
            message.error('Copy failed');
        });
    };
    const getEventIcon = (type)=>{
        switch(type){
            case 'click':
                return /*#__PURE__*/ jsx(AimOutlined, {
                    style: {
                        color: '#1890ff'
                    }
                });
            case 'input':
                return /*#__PURE__*/ jsx(EditOutlined, {
                    style: {
                        color: '#52c41a'
                    }
                });
            case 'scroll':
                return /*#__PURE__*/ jsx(VerticalAlignTopOutlined, {
                    style: {
                        color: '#faad14'
                    }
                });
            case 'navigation':
                return /*#__PURE__*/ jsx(CompassOutlined, {
                    style: {
                        color: '#722ed1'
                    }
                });
            case 'setViewport':
                return /*#__PURE__*/ jsx(CompassOutlined, {
                    style: {
                        color: '#eb2f96'
                    }
                });
            case 'keydown':
                return /*#__PURE__*/ jsx(KeyOutlined, {
                    style: {
                        color: '#fa8c16'
                    }
                });
            default:
                return /*#__PURE__*/ jsx(AimOutlined, {
                    style: {
                        color: '#d9d9d9'
                    }
                });
        }
    };
    const getEventColor = (type)=>{
        switch(type){
            case 'click':
                return '#1890ff';
            case 'input':
                return '#52c41a';
            case 'scroll':
                return '#faad14';
            case 'navigation':
                return '#722ed1';
            case 'setViewport':
                return '#eb2f96';
            case 'keydown':
                return '#fa8c16';
            default:
                return '#d9d9d9';
        }
    };
    const getEventTitle = (event)=>{
        switch(event.type){
            case 'click':
                if ('BUTTON' === event.targetTagName) return 'Click Button';
                if (event.value) return `Click Element "${event.value}"`;
                return 'Click';
            case 'input':
                return 'Input';
            case 'scroll':
                return 'Scroll';
            case 'navigation':
                return 'Navigate';
            case 'setViewport':
                return 'Set viewport';
            case 'keydown':
                return 'Key down';
            default:
                return event.type;
        }
    };
    const getEventDescription = (event)=>{
        const eventTitle = getEventTitle(event);
        switch(event.type){
            case 'click':
                if (true === event.descriptionLoading && event.elementRect?.x !== void 0 && event.elementRect?.y !== void 0) return /*#__PURE__*/ jsxs("span", {
                    style: {
                        display: 'flex',
                        alignItems: 'center',
                        gap: '4px'
                    },
                    children: [
                        /*#__PURE__*/ jsxs(Text, {
                            children: [
                                eventTitle,
                                " - "
                            ]
                        }),
                        /*#__PURE__*/ jsx(ShinyText, {
                            text: `(${event.elementRect.x}, ${event.elementRect.y})`,
                            disabled: false,
                            speed: 3,
                            className: "step-title-shiny"
                        })
                    ]
                });
                if (false === event.descriptionLoading && event.elementDescription) return /*#__PURE__*/ jsxs(Text, {
                    className: "",
                    children: [
                        eventTitle,
                        " - ",
                        event.elementDescription
                    ]
                });
                return /*#__PURE__*/ jsx(Text, {
                    children: eventTitle
                });
            case 'input':
                if (false === event.descriptionLoading && event.elementDescription) return /*#__PURE__*/ jsxs(Text, {
                    children: [
                        eventTitle,
                        " - ",
                        event.elementDescription
                    ]
                });
                return /*#__PURE__*/ jsxs("span", {
                    style: {
                        display: 'flex',
                        alignItems: 'center',
                        gap: '4px'
                    },
                    children: [
                        /*#__PURE__*/ jsxs(Text, {
                            children: [
                                eventTitle,
                                " - "
                            ]
                        }),
                        /*#__PURE__*/ jsx(ShinyText, {
                            text: event.value ? `"${event.value}"` : '',
                            disabled: false,
                            speed: 3,
                            className: "step-title-shiny"
                        })
                    ]
                });
            case 'scroll':
                if (event.elementDescription) return /*#__PURE__*/ jsxs(Text, {
                    children: [
                        eventTitle,
                        " - ",
                        event.value?.split(' ')[0] || ''
                    ]
                });
                return /*#__PURE__*/ jsxs(Text, {
                    children: [
                        eventTitle,
                        " - Position: (",
                        event.elementRect?.x || 0,
                        ",",
                        ' ',
                        event.elementRect?.y || 0,
                        ")"
                    ]
                });
            case 'navigation':
                {
                    const truncatedUrl = event.url && event.url.length > 50 ? `${event.url.substring(0, 50)}...` : event.url;
                    return /*#__PURE__*/ jsxs(Text, {
                        children: [
                            eventTitle,
                            " - ",
                            truncatedUrl
                        ]
                    });
                }
            case 'setViewport':
                return /*#__PURE__*/ jsxs(Text, {
                    children: [
                        eventTitle,
                        " - Desktop 964x992 px"
                    ]
                });
            case 'keydown':
                return /*#__PURE__*/ jsxs(Text, {
                    children: [
                        eventTitle,
                        " - Key: ",
                        event.value || 'Unknown'
                    ]
                });
            default:
                return /*#__PURE__*/ jsx(Text, {
                    children: eventTitle
                });
        }
    };
    const timelineItems = events.map((event, index)=>{
        const boxedImage = event.screenshotWithBox;
        const afterImage = event.screenshotAfter;
        const isExpanded = expandedEvents.has(index);
        return {
            dot: getEventIcon(event.type),
            color: getEventColor(event.type),
            children: /*#__PURE__*/ jsx("div", {
                children: /*#__PURE__*/ jsxs(Card, {
                    size: "small",
                    bordered: false,
                    style: {
                        marginBottom: isExpanded ? 8 : 8,
                        cursor: 'pointer'
                    },
                    onClick: ()=>{
                        toggleEventExpansion(index);
                        onEventClick?.(event, index);
                    },
                    styles: {
                        body: {
                            padding: '8px 12px',
                            backgroundColor: '#F2F4F7',
                            borderRadius: '8px'
                        }
                    },
                    children: [
                        /*#__PURE__*/ jsxs(Space, {
                            style: {
                                width: '100%',
                                justifyContent: 'space-between',
                                alignItems: 'center',
                                color: 'rgba(0, 0, 0, 0.85)'
                            },
                            children: [
                                /*#__PURE__*/ jsx(Space, {
                                    style: {
                                        flex: 1,
                                        minWidth: 0
                                    },
                                    children: getEventDescription(event)
                                }),
                                /*#__PURE__*/ jsx(Space, {
                                    children: (boxedImage || afterImage) && /*#__PURE__*/ jsxs("div", {
                                        style: {
                                            display: 'flex',
                                            alignItems: 'center'
                                        },
                                        children: [
                                            boxedImage && /*#__PURE__*/ jsx("div", {
                                                style: {
                                                    width: '24px',
                                                    height: '24px',
                                                    borderRadius: '4px',
                                                    overflow: 'hidden',
                                                    boxShadow: '1px 1px 1px 1px #00000014',
                                                    cursor: 'pointer',
                                                    transition: 'all 0.2s ease-in-out',
                                                    zIndex: 2
                                                },
                                                onMouseEnter: (e)=>{
                                                    const target = e.currentTarget;
                                                    target.style.transform = 'scale(1.2)';
                                                    target.style.boxShadow = `0 2px 8px ${getEventColor(event.type)}60`;
                                                },
                                                onMouseLeave: (e)=>{
                                                    const target = e.currentTarget;
                                                    target.style.transform = 'scale(1)';
                                                    target.style.boxShadow = '1px 1px 1px 1px #00000014';
                                                },
                                                onClick: (e)=>{
                                                    e.stopPropagation();
                                                },
                                                children: /*#__PURE__*/ jsx(Image, {
                                                    src: boxedImage,
                                                    width: "100%",
                                                    height: "100%",
                                                    style: {
                                                        objectFit: 'cover',
                                                        display: 'block'
                                                    },
                                                    preview: {
                                                        mask: false
                                                    }
                                                })
                                            }),
                                            afterImage && /*#__PURE__*/ jsx("div", {
                                                style: {
                                                    width: '24px',
                                                    height: '24px',
                                                    borderRadius: '4px',
                                                    overflow: 'hidden',
                                                    boxShadow: '1px 1px 1px 1px #00000014',
                                                    cursor: 'pointer',
                                                    transition: 'all 0.2s ease-in-out',
                                                    marginLeft: boxedImage ? '-8px' : '0',
                                                    zIndex: 1
                                                },
                                                onMouseEnter: (e)=>{
                                                    const target = e.currentTarget;
                                                    target.style.transform = 'scale(1.2)';
                                                    target.style.boxShadow = '0 2px 8px #52c41a60';
                                                },
                                                onMouseLeave: (e)=>{
                                                    const target = e.currentTarget;
                                                    target.style.transform = 'scale(1)';
                                                    target.style.boxShadow = '1px 1px 1px 1px #00000014';
                                                },
                                                onClick: (e)=>{
                                                    e.stopPropagation();
                                                },
                                                children: /*#__PURE__*/ jsx(Image, {
                                                    src: afterImage,
                                                    width: "100%",
                                                    height: "100%",
                                                    style: {
                                                        objectFit: 'cover',
                                                        display: 'block'
                                                    },
                                                    preview: {
                                                        mask: false
                                                    }
                                                })
                                            })
                                        ]
                                    })
                                })
                            ]
                        }),
                        isExpanded && /*#__PURE__*/ jsx("div", {
                            style: {
                                marginTop: 8,
                                marginBottom: 8
                            },
                            children: /*#__PURE__*/ jsx(Card, {
                                size: "small",
                                style: {
                                    backgroundColor: '#f5f5f5'
                                },
                                bodyStyle: {
                                    padding: '0px'
                                },
                                children: /*#__PURE__*/ jsxs("div", {
                                    style: {
                                        position: 'relative'
                                    },
                                    children: [
                                        /*#__PURE__*/ jsx("pre", {
                                            style: {
                                                fontSize: '12px',
                                                margin: 0,
                                                whiteSpace: 'pre-wrap',
                                                backgroundColor: '#ffffff',
                                                padding: '12px',
                                                borderRadius: '8px',
                                                maxHeight: '250px',
                                                overflow: 'auto'
                                            },
                                            children: JSON.stringify(truncateJsonStrings(event), null, 2)
                                        }),
                                        /*#__PURE__*/ jsx(Button, {
                                            type: "text",
                                            size: "small",
                                            icon: /*#__PURE__*/ jsx(CopyOutlined, {}),
                                            onClick: (e)=>{
                                                e.stopPropagation();
                                                copyToClipboard(JSON.stringify(event, null, 2));
                                            },
                                            style: {
                                                position: 'absolute',
                                                top: '8px',
                                                right: '8px',
                                                background: 'rgba(255, 255, 255, 0.9)',
                                                border: '1px solid #d9d9d9'
                                            },
                                            title: "Copy JSON"
                                        })
                                    ]
                                })
                            })
                        })
                    ]
                })
            })
        };
    });
    return /*#__PURE__*/ jsx("div", {
        style: {
            padding: '3px'
        },
        children: /*#__PURE__*/ jsx(Space, {
            direction: "vertical",
            size: "large",
            style: {
                width: '100%'
            },
            children: /*#__PURE__*/ jsx(Timeline, {
                mode: "left",
                className: "timeline-scrollable",
                items: timelineItems,
                style: {
                    paddingTop: 16
                }
            })
        })
    });
};
export { RecordTimeline };
